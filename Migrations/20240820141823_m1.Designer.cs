// <auto-generated />
using System;
using IS_server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IS_server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240820141823_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IS_server.Data.Izvestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("idDoktora")
                        .HasColumnType("int");

                    b.Property<int>("idPacijenta")
                        .HasColumnType("int");

                    b.Property<string>("sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vremeStvaranja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("idDoktora");

                    b.HasIndex("idPacijenta");

                    b.ToTable("Izvestaji");
                });

            modelBuilder.Entity("IS_server.Data.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("receieverEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("receiverId")
                        .HasColumnType("int");

                    b.Property<string>("senderEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("senderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("IS_server.Data.Oprema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("idSobe")
                        .HasColumnType("int");

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poslednjeOdrzavanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("idSobe")
                        .IsUnique()
                        .HasFilter("[idSobe] IS NOT NULL");

                    b.ToTable("Opreme");
                });

            modelBuilder.Entity("IS_server.Data.Sesija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("idSobe")
                        .HasColumnType("int");

                    b.Property<int>("idTerapije")
                        .HasColumnType("int");

                    b.Property<string>("termin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("idSobe");

                    b.HasIndex("idTerapije");

                    b.ToTable("Sesije");
                });

            modelBuilder.Entity("IS_server.Data.Soba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("brojSobe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("IS_server.Data.Terapija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("brojSesija")
                        .HasColumnType("int");

                    b.Property<string>("datumKraja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datumPocetka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idDoktora")
                        .HasColumnType("int");

                    b.Property<int>("idPacijenta")
                        .HasColumnType("int");

                    b.Property<string>("sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("idDoktora");

                    b.HasIndex("idPacijenta");

                    b.ToTable("Terapije");
                });

            modelBuilder.Entity("IS_server.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("datumRodjenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IS_server.Data.Izvestaj", b =>
                {
                    b.HasOne("IS_server.Data.User", "Doktor")
                        .WithMany()
                        .HasForeignKey("idDoktora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IS_server.Data.User", "Pacijent")
                        .WithMany()
                        .HasForeignKey("idPacijenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("IS_server.Data.Message", b =>
                {
                    b.HasOne("IS_server.Data.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("receiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IS_server.Data.User", "Sender")
                        .WithMany()
                        .HasForeignKey("senderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("IS_server.Data.Oprema", b =>
                {
                    b.HasOne("IS_server.Data.Soba", "soba")
                        .WithOne("oprema")
                        .HasForeignKey("IS_server.Data.Oprema", "idSobe");

                    b.Navigation("soba");
                });

            modelBuilder.Entity("IS_server.Data.Sesija", b =>
                {
                    b.HasOne("IS_server.Data.Soba", "soba")
                        .WithMany()
                        .HasForeignKey("idSobe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IS_server.Data.Terapija", "terapija")
                        .WithMany()
                        .HasForeignKey("idTerapije")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("soba");

                    b.Navigation("terapija");
                });

            modelBuilder.Entity("IS_server.Data.Terapija", b =>
                {
                    b.HasOne("IS_server.Data.User", "Doktor")
                        .WithMany()
                        .HasForeignKey("idDoktora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IS_server.Data.User", "Pacijent")
                        .WithMany()
                        .HasForeignKey("idPacijenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("IS_server.Data.Soba", b =>
                {
                    b.Navigation("oprema")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
